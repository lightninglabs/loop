// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: asset_deposit.proto

// We can't change this to swapserverrpc, it would be a breaking change because
// the package name is also contained in the HTTP URIs and old clients would
// call the wrong endpoints. Luckily with the go_package option we can have
// different golang and RPC package names to fix protobuf namespace conflicts.

package swapserverrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AssetDepositProtocolVersion is the version of the asset deposit protocol.
type AssetDepositProtocolVersion int32

const (
	// V0 is the first version of the asset deposit protocol.
	AssetDepositProtocolVersion_ASSET_DEPOSIT_V0 AssetDepositProtocolVersion = 0
)

// Enum value maps for AssetDepositProtocolVersion.
var (
	AssetDepositProtocolVersion_name = map[int32]string{
		0: "ASSET_DEPOSIT_V0",
	}
	AssetDepositProtocolVersion_value = map[string]int32{
		"ASSET_DEPOSIT_V0": 0,
	}
)

func (x AssetDepositProtocolVersion) Enum() *AssetDepositProtocolVersion {
	p := new(AssetDepositProtocolVersion)
	*p = x
	return p
}

func (x AssetDepositProtocolVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetDepositProtocolVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_asset_deposit_proto_enumTypes[0].Descriptor()
}

func (AssetDepositProtocolVersion) Type() protoreflect.EnumType {
	return &file_asset_deposit_proto_enumTypes[0]
}

func (x AssetDepositProtocolVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetDepositProtocolVersion.Descriptor instead.
func (AssetDepositProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{0}
}

// NewAssetDepositServerReq is the request to the Server to create a new asset
// deposit.
type NewAssetDepositServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// asset_id is the id of the asset to deposit.
	AssetId []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// amount is the amount of the asset to deposit.
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// client_internal_key is the client's internal pubkey used for the asset
	// deposit deposit MuSig2 key.
	ClientInternalPubkey []byte `protobuf:"bytes,3,opt,name=client_internal_pubkey,json=clientInternalPubkey,proto3" json:"client_internal_pubkey,omitempty"`
	// client_script_key is the client's script pubkey used for the asset
	// deposit timeout script.
	ClientScriptPubkey []byte `protobuf:"bytes,4,opt,name=client_script_pubkey,json=clientScriptPubkey,proto3" json:"client_script_pubkey,omitempty"`
	// csv_expiry is the CSV expiry for the deposit transaction.
	CsvExpiry int32 `protobuf:"varint,5,opt,name=csv_expiry,json=csvExpiry,proto3" json:"csv_expiry,omitempty"`
}

func (x *NewAssetDepositServerReq) Reset() {
	*x = NewAssetDepositServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAssetDepositServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAssetDepositServerReq) ProtoMessage() {}

func (x *NewAssetDepositServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAssetDepositServerReq.ProtoReflect.Descriptor instead.
func (*NewAssetDepositServerReq) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{0}
}

func (x *NewAssetDepositServerReq) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *NewAssetDepositServerReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *NewAssetDepositServerReq) GetClientInternalPubkey() []byte {
	if x != nil {
		return x.ClientInternalPubkey
	}
	return nil
}

func (x *NewAssetDepositServerReq) GetClientScriptPubkey() []byte {
	if x != nil {
		return x.ClientScriptPubkey
	}
	return nil
}

func (x *NewAssetDepositServerReq) GetCsvExpiry() int32 {
	if x != nil {
		return x.CsvExpiry
	}
	return 0
}

// NewAssetDepositServerRes is the Server's response to a NewAssetDeposit
// request.
type NewAssetDepositServerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deposit_id is the unique id of the deposit.
	DepositId string `protobuf:"bytes,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	// server_script_pubkey is the script pubkey of the server used for the
	// asset deposit spending HTLC script.
	ServerScriptPubkey []byte `protobuf:"bytes,2,opt,name=server_script_pubkey,json=serverScriptPubkey,proto3" json:"server_script_pubkey,omitempty"`
	// server_internal_pubkey is the public key of the server used for the asset
	// deposit MuSig2 key.
	ServerInternalPubkey []byte `protobuf:"bytes,3,opt,name=server_internal_pubkey,json=serverInternalPubkey,proto3" json:"server_internal_pubkey,omitempty"`
	// deposit_addr is the TAP address to deposit the asset to.
	DepositAddr string `protobuf:"bytes,4,opt,name=deposit_addr,json=depositAddr,proto3" json:"deposit_addr,omitempty"`
}

func (x *NewAssetDepositServerRes) Reset() {
	*x = NewAssetDepositServerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAssetDepositServerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAssetDepositServerRes) ProtoMessage() {}

func (x *NewAssetDepositServerRes) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAssetDepositServerRes.ProtoReflect.Descriptor instead.
func (*NewAssetDepositServerRes) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{1}
}

func (x *NewAssetDepositServerRes) GetDepositId() string {
	if x != nil {
		return x.DepositId
	}
	return ""
}

func (x *NewAssetDepositServerRes) GetServerScriptPubkey() []byte {
	if x != nil {
		return x.ServerScriptPubkey
	}
	return nil
}

func (x *NewAssetDepositServerRes) GetServerInternalPubkey() []byte {
	if x != nil {
		return x.ServerInternalPubkey
	}
	return nil
}

func (x *NewAssetDepositServerRes) GetDepositAddr() string {
	if x != nil {
		return x.DepositAddr
	}
	return ""
}

type WithdrawAssetDepositsServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositIds []string `protobuf:"bytes,1,rep,name=deposit_ids,json=depositIds,proto3" json:"deposit_ids,omitempty"`
}

func (x *WithdrawAssetDepositsServerReq) Reset() {
	*x = WithdrawAssetDepositsServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawAssetDepositsServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawAssetDepositsServerReq) ProtoMessage() {}

func (x *WithdrawAssetDepositsServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawAssetDepositsServerReq.ProtoReflect.Descriptor instead.
func (*WithdrawAssetDepositsServerReq) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{2}
}

func (x *WithdrawAssetDepositsServerReq) GetDepositIds() []string {
	if x != nil {
		return x.DepositIds
	}
	return nil
}

type WithdrawAssetDepositsServerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositKeys map[string][]byte `protobuf:"bytes,1,rep,name=deposit_keys,json=depositKeys,proto3" json:"deposit_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WithdrawAssetDepositsServerRes) Reset() {
	*x = WithdrawAssetDepositsServerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawAssetDepositsServerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawAssetDepositsServerRes) ProtoMessage() {}

func (x *WithdrawAssetDepositsServerRes) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawAssetDepositsServerRes.ProtoReflect.Descriptor instead.
func (*WithdrawAssetDepositsServerRes) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{3}
}

func (x *WithdrawAssetDepositsServerRes) GetDepositKeys() map[string][]byte {
	if x != nil {
		return x.DepositKeys
	}
	return nil
}

// AssetDepositPartialSig holds a nonce and partial signature spending a
// deposit.
type AssetDepositPartialSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deposit_id is the deposit ID corresponding to this partial signature.
	DepositId string `protobuf:"bytes,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	// nonce is the nonce used for generating this signature.
	Nonce []byte `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// partial_sig is the partial signature for spending the deposit.
	PartialSig []byte `protobuf:"bytes,3,opt,name=partial_sig,json=partialSig,proto3" json:"partial_sig,omitempty"`
}

func (x *AssetDepositPartialSig) Reset() {
	*x = AssetDepositPartialSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetDepositPartialSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetDepositPartialSig) ProtoMessage() {}

func (x *AssetDepositPartialSig) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetDepositPartialSig.ProtoReflect.Descriptor instead.
func (*AssetDepositPartialSig) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{4}
}

func (x *AssetDepositPartialSig) GetDepositId() string {
	if x != nil {
		return x.DepositId
	}
	return ""
}

func (x *AssetDepositPartialSig) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *AssetDepositPartialSig) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

// PushAssetDepositHtlcSigsReq holds partial signatures spending one or more
// deposits and the zero fee HTLC spending them.
type PushAssetDepositHtlcSigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// partial_sigs holds the partial signatures for the deposits spent by the
	// HTLC. The inputs of the HTLC will be in the same order defined here.
	PartialSigs []*AssetDepositPartialSig `protobuf:"bytes,1,rep,name=partial_sigs,json=partialSigs,proto3" json:"partial_sigs,omitempty"`
	// htlc_psbt is the HTLC psbt.
	HtlcPsbt []byte `protobuf:"bytes,2,opt,name=htlc_psbt,json=htlcPsbt,proto3" json:"htlc_psbt,omitempty"`
}

func (x *PushAssetDepositHtlcSigsReq) Reset() {
	*x = PushAssetDepositHtlcSigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAssetDepositHtlcSigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAssetDepositHtlcSigsReq) ProtoMessage() {}

func (x *PushAssetDepositHtlcSigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAssetDepositHtlcSigsReq.ProtoReflect.Descriptor instead.
func (*PushAssetDepositHtlcSigsReq) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{5}
}

func (x *PushAssetDepositHtlcSigsReq) GetPartialSigs() []*AssetDepositPartialSig {
	if x != nil {
		return x.PartialSigs
	}
	return nil
}

func (x *PushAssetDepositHtlcSigsReq) GetHtlcPsbt() []byte {
	if x != nil {
		return x.HtlcPsbt
	}
	return nil
}

type PushAssetDepositHtlcSigsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushAssetDepositHtlcSigsRes) Reset() {
	*x = PushAssetDepositHtlcSigsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAssetDepositHtlcSigsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAssetDepositHtlcSigsRes) ProtoMessage() {}

func (x *PushAssetDepositHtlcSigsRes) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAssetDepositHtlcSigsRes.ProtoReflect.Descriptor instead.
func (*PushAssetDepositHtlcSigsRes) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{6}
}

// PushAssetDepositKeysReq holds private keys of one or more deposits.
type PushAssetDepositKeysReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deposit_keys is a map wich maps deposit_id to deposit internal private
	// key.
	DepositKeys map[string][]byte `protobuf:"bytes,1,rep,name=deposit_keys,json=depositKeys,proto3" json:"deposit_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PushAssetDepositKeysReq) Reset() {
	*x = PushAssetDepositKeysReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAssetDepositKeysReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAssetDepositKeysReq) ProtoMessage() {}

func (x *PushAssetDepositKeysReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAssetDepositKeysReq.ProtoReflect.Descriptor instead.
func (*PushAssetDepositKeysReq) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{7}
}

func (x *PushAssetDepositKeysReq) GetDepositKeys() map[string][]byte {
	if x != nil {
		return x.DepositKeys
	}
	return nil
}

type PushAssetDepositKeysRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushAssetDepositKeysRes) Reset() {
	*x = PushAssetDepositKeysRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_deposit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAssetDepositKeysRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAssetDepositKeysRes) ProtoMessage() {}

func (x *PushAssetDepositKeysRes) ProtoReflect() protoreflect.Message {
	mi := &file_asset_deposit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAssetDepositKeysRes.ProtoReflect.Descriptor instead.
func (*PushAssetDepositKeysRes) Descriptor() ([]byte, []int) {
	return file_asset_deposit_proto_rawDescGZIP(), []int{8}
}

var File_asset_deposit_proto protoreflect.FileDescriptor

var file_asset_deposit_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x22, 0xd4,
	0x01, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x73, 0x76, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x73, 0x76, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x41, 0x0a, 0x1e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x64, 0x73, 0x22,
	0xbd, 0x01, 0x0a, 0x1e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x1a,
	0x3e, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x6e, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x22,
	0x7e, 0x0a, 0x1b, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x42,
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x53, 0x69, 0x67, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x6c, 0x63, 0x5f, 0x70, 0x73, 0x62, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x68, 0x74, 0x6c, 0x63, 0x50, 0x73, 0x62, 0x74, 0x22,
	0x1d, 0x0a, 0x1b, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x22, 0xaf,
	0x01, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73,
	0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x19, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x2a, 0x33, 0x0a, 0x1b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x53,
	0x53, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x56, 0x30, 0x10, 0x00,
	0x32, 0x9d, 0x03, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x21, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x69, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x18,
	0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x74, 0x6c, 0x63, 0x53, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6c, 0x6f, 0x6f,
	0x70, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_asset_deposit_proto_rawDescOnce sync.Once
	file_asset_deposit_proto_rawDescData = file_asset_deposit_proto_rawDesc
)

func file_asset_deposit_proto_rawDescGZIP() []byte {
	file_asset_deposit_proto_rawDescOnce.Do(func() {
		file_asset_deposit_proto_rawDescData = protoimpl.X.CompressGZIP(file_asset_deposit_proto_rawDescData)
	})
	return file_asset_deposit_proto_rawDescData
}

var file_asset_deposit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_asset_deposit_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_asset_deposit_proto_goTypes = []any{
	(AssetDepositProtocolVersion)(0),       // 0: looprpc.AssetDepositProtocolVersion
	(*NewAssetDepositServerReq)(nil),       // 1: looprpc.NewAssetDepositServerReq
	(*NewAssetDepositServerRes)(nil),       // 2: looprpc.NewAssetDepositServerRes
	(*WithdrawAssetDepositsServerReq)(nil), // 3: looprpc.WithdrawAssetDepositsServerReq
	(*WithdrawAssetDepositsServerRes)(nil), // 4: looprpc.WithdrawAssetDepositsServerRes
	(*AssetDepositPartialSig)(nil),         // 5: looprpc.AssetDepositPartialSig
	(*PushAssetDepositHtlcSigsReq)(nil),    // 6: looprpc.PushAssetDepositHtlcSigsReq
	(*PushAssetDepositHtlcSigsRes)(nil),    // 7: looprpc.PushAssetDepositHtlcSigsRes
	(*PushAssetDepositKeysReq)(nil),        // 8: looprpc.PushAssetDepositKeysReq
	(*PushAssetDepositKeysRes)(nil),        // 9: looprpc.PushAssetDepositKeysRes
	nil,                                    // 10: looprpc.WithdrawAssetDepositsServerRes.DepositKeysEntry
	nil,                                    // 11: looprpc.PushAssetDepositKeysReq.DepositKeysEntry
}
var file_asset_deposit_proto_depIdxs = []int32{
	10, // 0: looprpc.WithdrawAssetDepositsServerRes.deposit_keys:type_name -> looprpc.WithdrawAssetDepositsServerRes.DepositKeysEntry
	5,  // 1: looprpc.PushAssetDepositHtlcSigsReq.partial_sigs:type_name -> looprpc.AssetDepositPartialSig
	11, // 2: looprpc.PushAssetDepositKeysReq.deposit_keys:type_name -> looprpc.PushAssetDepositKeysReq.DepositKeysEntry
	1,  // 3: looprpc.AssetDepositService.NewAssetDeposit:input_type -> looprpc.NewAssetDepositServerReq
	3,  // 4: looprpc.AssetDepositService.WithdrawAssetDeposits:input_type -> looprpc.WithdrawAssetDepositsServerReq
	6,  // 5: looprpc.AssetDepositService.PushAssetDepositHtlcSigs:input_type -> looprpc.PushAssetDepositHtlcSigsReq
	8,  // 6: looprpc.AssetDepositService.PushAssetDepositKeys:input_type -> looprpc.PushAssetDepositKeysReq
	2,  // 7: looprpc.AssetDepositService.NewAssetDeposit:output_type -> looprpc.NewAssetDepositServerRes
	4,  // 8: looprpc.AssetDepositService.WithdrawAssetDeposits:output_type -> looprpc.WithdrawAssetDepositsServerRes
	7,  // 9: looprpc.AssetDepositService.PushAssetDepositHtlcSigs:output_type -> looprpc.PushAssetDepositHtlcSigsRes
	9,  // 10: looprpc.AssetDepositService.PushAssetDepositKeys:output_type -> looprpc.PushAssetDepositKeysRes
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_asset_deposit_proto_init() }
func file_asset_deposit_proto_init() {
	if File_asset_deposit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_asset_deposit_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NewAssetDepositServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NewAssetDepositServerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawAssetDepositsServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawAssetDepositsServerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AssetDepositPartialSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PushAssetDepositHtlcSigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PushAssetDepositHtlcSigsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PushAssetDepositKeysReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_deposit_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PushAssetDepositKeysRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_asset_deposit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_asset_deposit_proto_goTypes,
		DependencyIndexes: file_asset_deposit_proto_depIdxs,
		EnumInfos:         file_asset_deposit_proto_enumTypes,
		MessageInfos:      file_asset_deposit_proto_msgTypes,
	}.Build()
	File_asset_deposit_proto = out.File
	file_asset_deposit_proto_rawDesc = nil
	file_asset_deposit_proto_goTypes = nil
	file_asset_deposit_proto_depIdxs = nil
}
